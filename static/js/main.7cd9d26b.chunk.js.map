{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","App.module.css","components/Buttons/Button.module.css","components/Message/Message.module.css","components/ContactForm/ContactForm.module.css","redux/contacts/contacts-types.js","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/Container/Container.js","components/Buttons/Button.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/Message/Message.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactsList/ContactsList.module.css"],"names":["module","exports","newContact","type","types","payload","id","uuidv4","name","number","idForDel","value","ContactForm","state","createIdName","createIdNumber","saveContact","e","currentTarget","setState","submitContact","preventDefault","props","onSubmit","reset","this","className","s","label","htmlFor","head__field","input","onChange","btn","Component","connect","dispatch","contactActions","Container","title","children","container","Button","onClick","contactId","contacts","items","normalizerFilter","filter","toLocaleLowerCase","contact","includes","onclickBtn","map","contactBox","key","btnBox","target","Message","text","message","App","page__wrapper","length","initialState","combineReducers","rootReducer","contactReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,YAAc,8B,mBCA9DD,EAAOC,QAAU,CAAC,MAAQ,2B,mBCA1BD,EAAOC,QAAU,CAAC,cAAgB,6B,mBCAlCD,EAAOC,QAAU,CAAC,IAAM,sB,mBCAxBD,EAAOC,QAAU,CAAC,QAAU,2B,sDCA5BD,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,YAAc,iCAAiC,IAAM,2B,+ICD3F,EACN,eADM,EAEH,kBAFG,EAGH,kBCmBG,EAnBI,SAAAC,GAAU,MAAK,CAC9BC,KAAMC,EACNC,QAAS,CACLC,GAAIC,cACJC,KAAMN,EAAWM,KACjBC,OAAQP,EAAWO,UAcZ,EAVO,SAAAC,GAAQ,MAAK,CAC/BP,KAAMC,EACNC,QAASK,IAQE,EALM,SAAAC,GAAK,MAAK,CAC3BR,KAAMC,EACNC,QAASM,I,gBCVPC,E,4MACFC,MAAQ,CACJL,KAAM,GACNC,OAAQ,I,EAGZK,aAAeP,c,EACfQ,eAAiBR,c,EAEjBS,YAAc,SAAAC,GAAM,IAAD,EACSA,EAAEC,cAAlBV,EADO,EACPA,KAAMG,EADC,EACDA,MACd,EAAKQ,SAAL,eACKX,EAAOG,K,EAIhBS,cAAgB,SAAAH,GACZA,EAAEI,iBAEF,EAAKC,MAAMC,SAAS,EAAKV,OACzB,EAAKW,S,EAGTA,MAAQ,WACJ,EAAKL,SAAS,CACVX,KAAM,GACNC,OAAQ,M,uDAKZ,OACI,0BAAMc,SAAUE,KAAKL,eACjB,2BAAOM,UAAWC,IAAEC,MAAOC,QAASJ,KAAKX,cACrC,yBAAKY,UAAWC,IAAEG,aAAlB,QACA,2BACI3B,KAAK,OACLK,KAAK,OACLkB,UAAWC,IAAEI,MACbpB,MAAOc,KAAKZ,MAAML,KAClBwB,SAAUP,KAAKT,YACfV,GAAImB,KAAKX,gBAIjB,2BAAOY,UAAWC,IAAEC,MAAOC,QAASJ,KAAKV,gBACrC,yBAAKW,UAAWC,IAAEG,aAAlB,UACA,2BACI3B,KAAK,MACLK,KAAK,SACLkB,UAAWC,IAAEI,MACbpB,MAAOc,KAAKZ,MAAMJ,OAClBuB,SAAUP,KAAKT,YACfV,GAAImB,KAAKV,kBAGjB,4BAAQW,UAAWC,IAAEM,IAAK9B,KAAK,UAA/B,oB,GAxDU+B,aAyEXC,cAAQ,MATI,SAAAC,GAAQ,MAAK,CACpCb,SAAU,SAAArB,GAAU,OAAIkC,EAASC,EAA0BnC,QAQhDiC,CAAkCvB,G,iBCrElC0B,EATG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACI,yBAAKd,UAAWC,IAAEc,WACd,wBAAIf,UAAWC,IAAEY,OAAQA,GACxBC,I,iBCaEE,EAjBA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACvB,OACI,4BACIlB,UAAWC,IAAEM,IACb9B,KAAK,SACLwC,QAAS,kBAAMA,EAAQC,KAH3B,W,gBC6COT,eA5BS,SAAAtB,GAAU,IAAD,EACHA,EAAMgC,SAAxBC,EADqB,EACrBA,MACFC,EAFuB,EACdC,OACiBC,oBAMhC,MAAO,CACHJ,SALoBC,EAAME,QAAO,SAAAE,GAAO,OACxCA,EAAQ1C,KAAKyC,oBAAoBE,SAASJ,UAQvB,SAAAX,GAAQ,MAAK,CACpCgB,WAAY,SAAA9C,GAAE,OAAI8B,EAASC,EAA6B/B,QAc7C6B,EA5CM,SAAC,GAA8B,IAA5BU,EAA2B,EAA3BA,SAAUO,EAAiB,EAAjBA,WAC9B,OACI,4BACKP,EAASQ,KAAI,SAAAH,GAAO,OACjB,wBAAIxB,UAAWC,IAAE2B,WAAYC,IAAKL,EAAQ5C,IACtC,yBAAKoB,UAAWC,IAAEnB,MAAO0C,EAAQ1C,MACjC,yBAAKkB,UAAWC,IAAElB,QAASyC,EAAQzC,QACnC,yBAAKiB,UAAWC,IAAE6B,QACd,kBAAC,EAAD,CAAQb,QAASS,EAAYR,UAAWM,EAAQ5C,c,iBCkBzD6B,eARS,SAAAtB,GAAK,MAAK,CAC9BF,MAAOE,EAAMgC,SAASG,WAGC,SAAAZ,GAAQ,MAAK,CACpCJ,SAAU,SAAAf,GAAC,OAAImB,EAASC,EAA4BpB,EAAEwC,OAAO9C,YAGlDwB,EA3BA,SAAC,GAAyB,IAAvBxB,EAAsB,EAAtBA,MAAOqB,EAAe,EAAfA,SACrB,OACI,2BAAON,UAAWC,IAAEC,OAChB,yBAAKF,UAAWC,IAAEG,aAAlB,oFACA,2BACIJ,UAAWC,IAAEI,MACb5B,KAAK,OACLQ,MAAOA,EACPqB,SAAUA,Q,iBCNX0B,EAJC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACf,OAAO,yBAAKjC,UAAWC,IAAEiC,SAAUD,ICMjCE,E,uKACQ,IACEhB,EAAapB,KAAKH,MAAlBuB,SAER,OACI,yBAAKnB,UAAWC,IAAEmC,eACd,kBAAC,EAAD,CAAWvB,MAAO,aACbM,EAASkB,OAAS,GAAK,kBAAC,EAAD,MACxB,kBAAC,EAAD,OAGJ,kBAAC,EAAD,CAAWxB,MAAO,YACbM,EAASkB,OAAS,EACf,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAASJ,KAAM,6B,GAfrBzB,aA6BHC,eANS,SAAAtB,GACpB,MAAO,CACHgC,SAAUhC,EAAMgC,SAASC,SAIlBX,CAAyB0B,G,uBCrClCG,EAAe,CACjB,CAAE1D,GAAI,OAAQE,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEH,GAAI,OAAQE,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEH,GAAI,OAAQE,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEH,GAAI,OAAQE,KAAM,iBAAkBC,OAAQ,cAyBnCwD,4BAAgB,CAC3BnB,MAvBU,WAA8C,IAA7CjC,EAA4C,uDAApCmD,EAAoC,yCAApB7D,EAAoB,EAApBA,KAAME,EAAc,EAAdA,QACzC,OAAQF,GACJ,KAAKC,EACD,MAAM,GAAN,mBAAWS,GAAX,CAAkBR,IAEtB,KAAKD,EACD,OAAOS,EAAMmC,QAAO,qBAAG1C,KAAgBD,KAE3C,QACI,OAAOQ,IAefmC,OAXW,WAAoC,IAAnCnC,EAAkC,uDAA1B,GAA0B,yCAApBV,EAAoB,EAApBA,KAAME,EAAc,EAAdA,QAChC,OAAQF,GACJ,KAAKC,EACD,OAAOC,EACX,QACI,OAAOQ,MCxBbqD,EAAcD,0BAAgB,CAChCpB,SAAUsB,IAKCC,EAFDC,sBAAYH,EAAaI,iCCFvCC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,EAAD,QAGRM,SAASC,eAAe,U,kBCX5B3E,EAAOC,QAAU,CAAC,WAAa,oC","file":"static/js/main.7cd9d26b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__VOhIi\",\"head__field\":\"Filter_head__field__WUNsW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Container_title__1Nync\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page__wrapper\":\"App_page__wrapper__29F2_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__ZeS5y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__OeVN8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__230Oz\",\"head__field\":\"ContactForm_head__field__3LcQO\",\"btn\":\"ContactForm_btn__1mPIr\"};","export default {\n    ADD: 'contacts/Add',\n    FILTER: 'contacts/Filter',\n    DELETE: 'contacts/Delete',\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport types from './contacts-types';\n\nconst addContact = newContact => ({\n    type: types.ADD,\n    payload: {\n        id: uuidv4(),\n        name: newContact.name,\n        number: newContact.number,\n    },\n});\n\nconst deleteContact = idForDel => ({\n    type: types.DELETE,\n    payload: idForDel,\n});\n\nconst changeFilter = value => ({\n    type: types.FILTER,\n    payload: value,\n});\n\nexport default { addContact, deleteContact, changeFilter };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    createIdName = uuidv4();\n    createIdNumber = uuidv4();\n\n    saveContact = e => {\n        const { name, value } = e.currentTarget;\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    submitContact = e => {\n        e.preventDefault();\n\n        this.props.onSubmit(this.state);\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({\n            name: '',\n            number: '',\n        });\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.submitContact}>\n                <label className={s.label} htmlFor={this.createIdName}>\n                    <div className={s.head__field}>Name</div>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        className={s.input}\n                        value={this.state.name}\n                        onChange={this.saveContact}\n                        id={this.createIdName}\n                    />\n                </label>\n\n                <label className={s.label} htmlFor={this.createIdNumber}>\n                    <div className={s.head__field}>Number</div>\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        className={s.input}\n                        value={this.state.number}\n                        onChange={this.saveContact}\n                        id={this.createIdNumber}\n                    />\n                </label>\n                <button className={s.btn} type=\"submit\">\n                    Add contact\n                </button>\n            </form>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: newContact => dispatch(contactActions.addContact(newContact)),\n});\n\nContactForm.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.string,\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\n\nimport s from './Container.module.css';\n\nconst Container = ({ title, children }) => {\n    return (\n        <div className={s.container}>\n            <h2 className={s.title}>{title}</h2>\n            {children}\n        </div>\n    );\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClick, contactId }) => {\n    return (\n        <button\n            className={s.btn}\n            type=\"button\"\n            onClick={() => onClick(contactId)}\n        >\n            Delete\n        </button>\n    );\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n    contactId: PropTypes.string,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactActions from '../../redux/contacts/contacts-actions';\nimport Button from '../Buttons';\nimport s from './ContactsList.module.css';\n\nconst ContactsList = ({ contacts, onclickBtn }) => {\n    return (\n        <ul>\n            {contacts.map(contact => (\n                <li className={s.contactBox} key={contact.id}>\n                    <div className={s.name}>{contact.name}</div>\n                    <div className={s.number}>{contact.number}</div>\n                    <div className={s.btnBox}>\n                        <Button onClick={onclickBtn} contactId={contact.id} />\n                    </div>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nconst mapStateToProps = state => {\n    const { items, filter } = state.contacts;\n    const normalizerFilter = filter.toLocaleLowerCase();\n\n    const visibleContacts = items.filter(contact =>\n        contact.name.toLocaleLowerCase().includes(normalizerFilter),\n    );\n\n    return {\n        contacts: visibleContacts,\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onclickBtn: id => dispatch(contactActions.deleteContact(id)),\n});\n\nContactsList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            name: PropTypes.string,\n            number: PropTypes.string,\n        }).isRequired,\n    ),\n    onclickBtn: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport contactActions from '../../redux/contacts/contacts-actions';\n\nconst Filter = ({ value, onChange }) => {\n    return (\n        <label className={s.label}>\n            <div className={s.head__field}>Фильтр по имени</div>\n            <input\n                className={s.input}\n                type=\"text\"\n                value={value}\n                onChange={onChange}\n            />\n        </label>\n    );\n};\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n    value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onChange: e => dispatch(contactActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\n\nimport s from './Message.module.css';\n\nconst Message = ({ text }) => {\n    return <div className={s.message}>{text}</div>;\n};\n\nexport default Message;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport s from './App.module.css';\n\nimport ContactForm from './components/ContactForm';\nimport Container from './components/Container';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\nimport Message from './components/Message';\n\nclass App extends Component {\n    render() {\n        const { contacts } = this.props;\n\n        return (\n            <div className={s.page__wrapper}>\n                <Container title={'Phonebook'}>\n                    {contacts.length > 1 && <Filter />}\n                    <ContactForm />\n                </Container>\n\n                <Container title={'Contacts'}>\n                    {contacts.length > 0 ? (\n                        <ContactsList />\n                    ) : (\n                        <Message text={'Phonebook is empty'} />\n                    )}\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        contacts: state.contacts.items,\n    };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\nimport types from './contacts-types';\n\nconst initialState = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst items = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case types.ADD:\n            return [...state, payload];\n\n        case types.DELETE:\n            return state.filter(({ id }) => id !== payload);\n\n        default:\n            return state;\n    }\n};\n\nconst filter = (state = '', { type, payload }) => {\n    switch (type) {\n        case types.FILTER:\n            return payload;\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    items,\n    filter,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport contactReducer from './contacts/contacts-reducer';\n\nconst rootReducer = combineReducers({\n    contacts: contactReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactBox\":\"ContactsList_contactBox__EqFo-\"};"],"sourceRoot":""}